#!/bin/zsh
eval "$(zoxide init zsh)"
export PATH=$HOME/bin:/usr/local/bin:$PATH

# Path to your oh-my-zsh installation.
export ZSH="$HOME/.oh-my-zsh"


# Set name of the theme to load --- if set to "random", it will
# load a random theme each time oh-my-zsh is loaded, in which case,
# to know which specific one was loaded, run: echo $RANDOM_THEME
# See https://github.com/ohmyzsh/ohmyzsh/wiki/Themes
export ZSH_THEME="apple"
if [[ -f ~/.zsh_dir/.zsh_aliases ]];
then 
    source ~/.zsh_dir/.zsh_aliases
fi
#
# Set list of themes to pick from when loading at random
# Setting this variable when ZSH_THEME=random will cause zsh to load
# a theme from this variable instead of looking in $ZSH/themes/
# If set to an empty array, this variable will have no effect.
# ZSH_THEME_RANDOM_CANDIDATES=( "robbyrussell" "agnoster" )

# Uncomment the following line to use case-sensitive completion.
# CASE_SENSITIVE="true"

# Uncomment the following line to use hyphen-insensitive completion.
# Case-sensitive completion must be off. _ and - will be interchangeable.
HYPHEN_INSENSITIVE="true"

# Uncomment one of the following lines to change the auto-update behavior
# zstyle ':omz:update' mode disabled  # disable automatic updates
zstyle ':omz:update' mode auto      # update automatically without asking
# zstyle ':omz:update' mode reminder  # just remind me to update when it's time

# Uncomment the following line to change how often to auto-update (in days).
# zstyle ':omz:update' frequency 13

# Uncomment the following line if pasting URLs and other text is messed up.
# DISABLE_MAGIC_FUNCTIONS="true"

# Uncomment the following line to disable auto-setting terminal title.
DISABLE_AUTO_TITLE="true"

# Uncomment the following line to enable command auto-correction.
# ENABLE_CORRECTION="true"

# Uncomment the following line to display red dots whilst waiting for completion.
# You can also set it to another string to have that shown instead of the default red dots.
# e.g. COMPLETION_WAITING_DOTS="%F{yellow}waiting...%f"
# Caution: this setting can cause issues with multiline prompts in zsh < 5.7.1 (see #5765)
# COMPLETION_WAITING_DOTS="true"

# Uncomment the following line if you want to disable marking untracked files
# under VCS as dirty. This makes repository status check for large repositories
# much, much faster.
# DISABLE_UNTRACKED_FILES_DIRTY="true"

# Uncomment the following line if you want to change the command execution time
# stamp shown in the history command output.
# You can set one of the optional three formats:
# "mm/dd/yyyy"|"dd.mm.yyyy"|"yyyy-mm-dd"
# or set a custom format using the strftime function format specifications,
# see 'man strftime' for details.
# HIST_STAMPS="mm/dd/yyyy"

# Would you like to use another custom folder than $ZSH/custom?
# ZSH_CUSTOM=/path/to/new-custom-folder

# Which plugins would you like to load?
# Standard plugins can be found in $ZSH/plugins/
# Custom plugins may be added to $ZSH_CUSTOM/plugins/
# Example format: plugins=(rails git textmate ruby lighthouse)
# Add wisely, as too many plugins slow down shell startup.
plugins=(git
zsh-syntax-highlighting
zsh-autosuggestions
# zsh-autocomplete
)

source $ZSH/oh-my-zsh.sh
# Set Tab for Autocomplete suggestion
# bindkey '^I' autosuggest-accept

# User configuration

export MANPATH="/usr/local/man:$MANPATH"

# You may need to manually set your language environment
# export LANG=en_US.UTF-8

# Preferred editor for local and remote sessions
# if [[ -n $SSH_CONNECTION ]]; then
#   export EDITOR='vim'
# else
#   export EDITOR='mvim'
# fi

# Compilation flags
# export ARCHFLAGS="-arch x86_64"

# Set personal aliases, overriding those provided by oh-my-zsh libs,
# plugins, and themes. Aliases can be placed here, though oh-my-zsh
# users are encouraged to define aliases within the ZSH_CUSTOM folder.
# For a full list of active aliases, run `alias`.
#
# Example aliases
# alias zshconfig="mate ~/.zshrc"
# alias ohmyzsh="mate ~/.oh-my-zsh"


# opam configuration
[[ ! -r /Users/${USER}/.opam/opam-init/init.zsh ]] || source /Users/${USER}/.opam/opam-init/init.zsh  > /dev/null 2> /dev/null
export PYENV_ROOT="$HOME/.pyenv"
export EDITOR="/opt/homebrew/bin/nvim"
export PATH="/Users/${USER}/.pyenv/shims:/opt/homebrew/opt/ccache/libexec:$PATH"
export VCPKG_ROOT="/Users/${USER}/.local/vcpkg"
export PATH="${VCPKG_ROOT}:$PATH"
command -v pyenv >/dev/null || export PATH="$PYENV_ROOT/bin:$PATH"
eval "$(pyenv init -)"

cmd_to_clip () { pbcopy <<< $BUFFER }
zle -N cmd_to_clip
bindkey '^Y' cmd_to_clip


open_zsh () { nvim ~/.zshrc }
zle -N open_zsh
# bindkey '^E' open_zsh

export LESSCHARSET=utf-8


function parse_git_branch() {
    git branch 2> /dev/null | sed -n -e 's/^\* \(.*\)/[\1]/p'
}
COLOR_DEF=$'%f'
COLOR_USR=$'%F{243}'
COLOR_DIR=$'%F{197}'
COLOR_GIT=$'%F{39}'
export ARROW='â†’'
export VCS='${vcs_info_msg_0_}'
NEWLINE=$'\n'
export PROMPT='%{$fg_bold[magenta]%}Bennys%{$reset_color%} %{$fg[cyan]%}%~/%{$reset_color%} ${vcs_info_msg_0_}${NEWLINE}${ARROW} '
export PATH="/Users/${USER}/.local:$PATH"
export PATH="/usr/local/lib:/usr/local/include:$PATH"
# export NGINX="/opt/homebrew/etc/nginx/nginx.conf"

export CPATH="-I/opt/homebrew/include"

export OPENSSL_ROOT=$(brew --prefix openssl)
run_Xquartz() {
  [ $(ps aux | grep -E '[X]quartz' | wc -l) -gt 0 ] && echo 'Xquartz is already running' \
  || nohup /Applications/Utilities/XQuartz.app/Contents/MacOS/X11.bin > /dev/null 2>&1 &
}

export PKG_CONFIG_PATH="/opt/homebrew/Cellar/imagemagick/7.1.1-29_1/lib/pkgconfig"

alias wss="z /Users/${USER}/CMU/Junior/Spring/secur/websecur"

export PATH="/Users/${USER}/.emacs.d/bin:${PATH}"
export DOOMDIR="/Users/${USER}/.config/doom"
# export CC="/opt/homebrew/opt/ccache/libexec/clang"

export CXX="/opt/homebrew/opt/ccache/libexec/g++-13"
